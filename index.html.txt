<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopify Support Advisor</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .pulse {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div id="root" class="container mx-auto px-4 py-12 max-w-4xl"></div>

    <script type="text/babel">
        const { useState, useEffect } = React;

        const ShopifySupport = () => {
            const [stage, setStage] = useState('landing');
            const [ticketId, setTicketId] = useState('');
            const [timeLeft, setTimeLeft] = useState(120); // 2 minutes in seconds
            const [queueTime, setQueueTime] = useState(5); // 5 seconds queue time

            // Generate random ticket ID
            const generateTicketId = () => {
                const randomNum = Math.floor(100000 + Math.random() * 900000);
                return `TKT-${randomNum}`;
            };

            // Handle contact support click
            const handleContactSupport = () => {
                setStage('queue');
                const queueInterval = setInterval(() => {
                    setQueueTime(prev => {
                        if (prev <= 1) {
                            clearInterval(queueInterval);
                            setStage('ticket');
                            setTicketId(generateTicketId());
                            return 0;
                        }
                        return prev - 1;
                    });
                }, 1000);
            };

            // Handle countdown timer
            useEffect(() => {
                if (stage !== 'ticket') return;

                const timer = setInterval(() => {
                    setTimeLeft(prev => {
                        if (prev <= 0) {
                            clearInterval(timer);
                            setStage('expired');
                            return 0;
                        }
                        return prev - 1;
                    });
                }, 1000);

                return () => clearInterval(timer);
            }, [stage]);

            // Format time for display
            const formatTime = (seconds) => {
                const mins = Math.floor(seconds / 60);
                const secs = seconds % 60;
                return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
            };

            // Handle live chat redirect
            const handleLiveChat = () => {
                window.location.href = 'http://t.me/Shopify_Solutions';
            };

            return (
                <div className="bg-white rounded-xl shadow-lg overflow-hidden">
                    {/* Header */}
                    <div className="bg-green-600 px-6 py-4">
                        <div className="flex items-center justify-between">
                            <div className="flex items-center space-x-4">
                                <div className="flex items-center">
                                    <span className="text-white font-bold">Shopify</span>
                                </div>
                                <h1 className="text-white text-xl font-bold">Support Advisor</h1>
                            </div>
                            {stage === 'ticket' && (
                                <div className={`text-sm font-medium ${timeLeft <= 60 ? 'text-red-300' : 'text-green-200'}`}>
                                    Session: {formatTime(timeLeft)}
                                </div>
                            )}
                        </div>
                    </div>

                    {/* Main Content */}
                    <div className="p-6 md:p-8">
                        {stage === 'landing' && (
                            <div className="text-center fade-in" data-aos="fade-up">
                                <div className="mx-auto w-24 h-24 bg-green-100 rounded-full flex items-center justify-center mb-6">
                                    <svg className="w-10 h-10 text-green-600" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2Z" fill="currentColor"/>
                                        <circle cx="7" cy="12" r="1" fill="white"/>
                                        <circle cx="12" cy="12" r="1" fill="white"/>
                                        <circle cx="17" cy="12" r="1" fill="white"/>
                                    </svg>
                                </div>
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">How can we help you today?</h2>
                                <p className="text-gray-600 mb-8 max-w-md mx-auto">
                                    Our support team is ready to assist you with any questions about your Shopify store.
                                </p>
                                <button
                                    onClick={handleContactSupport}
                                    className="bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-8 rounded-lg shadow-md transition-all duration-300 transform hover:scale-105 pulse"
                                >
                                    Contact Support
                                </button>
                            </div>
                        )}

                        {stage === 'queue' && (
                            <div className="text-center fade-in" data-aos="fade-up">
                                <div className="mx-auto w-24 h-24 bg-blue-100 rounded-full flex items-center justify-center mb-6 animate-spin">
                                    <i data-feather="loader" className="text-blue-600 w-10 h-10"></i>
                                </div>
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">Connecting you to an advisor</h2>
                                <p className="text-gray-600 mb-6">
                                    You are in the queue. Please wait while we connect you to your assigned support advisor.
                                </p>
                                <div className="w-full bg-gray-200 rounded-full h-2.5 mb-8 max-w-md mx-auto">
                                    <div 
                                        className="bg-blue-600 h-2.5 rounded-full" 
                                        style={{ width: `${(5 - queueTime) * 20}%` }}
                                    ></div>
                                </div>
                                <p className="text-sm text-gray-500">Estimated wait time: {queueTime} seconds</p>
                            </div>
                        )}

                        {stage === 'ticket' && (
                            <div className="text-center fade-in" data-aos="fade-up">
                                <div className="mx-auto w-24 h-24 bg-green-100 rounded-full flex items-center justify-center mb-6">
                                    <svg className="w-10 h-10 text-green-600" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2Z" fill="currentColor"/>
                                        <path d="M10 15L7 12L6 13L10 17L18 9L17 8L10 15Z" fill="white"/>
                                    </svg>
                                </div>
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">Support Advisor Ready</h2>
                                <div className="bg-gray-100 rounded-lg p-4 mb-6 max-w-md mx-auto">
                                    <p className="text-sm text-gray-600 mb-2">Your Ticket ID is</p>
                                    <p className="text-lg font-bold text-green-600">{ticketId}</p>
                                    <p className="text-sm text-gray-600 mt-2">Please provide this ID to your advisor</p>
                                </div>
                                <p className="text-gray-600 mb-6">
                                    Your session will expire in <span className={timeLeft <= 600 ? 'text-red-500 font-medium' : 'text-green-600 font-medium'}>
                                        {formatTime(timeLeft)}
                                    </span>
                                </p>
                                <button
                                    onClick={handleLiveChat}
                                    className="bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-8 rounded-lg shadow-md transition-all duration-300 transform hover:scale-105"
                                >
                                    Have a Live Chat with Your Support Advisor
                                </button>
                            </div>
                        )}

                        {stage === 'expired' && (
                            <div className="text-center fade-in" data-aos="fade-up">
                                <div className="mx-auto w-24 h-24 bg-red-100 rounded-full flex items-center justify-center mb-6">
                                    <i data-feather="alert-circle" className="text-red-600 w-10 h-10"></i>
                                </div>
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">Session Expired</h2>
                                <p className="text-gray-600 mb-6">
                                    Your support session has ended. Please request a new support session if you still need assistance.
                                </p>
                                <button
                                    onClick={() => {
                                        setStage('landing');
                                        setTimeLeft(120);
                                    }}
                                    className="bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-8 rounded-lg shadow-md transition-all duration-300 transform hover:scale-105"
                                >
                                    Request New Support Session
                                </button>
                            </div>
                        )}
                    </div>

                    {/* Footer */}
                    <div className="bg-gray-50 px-6 py-4 border-t border-gray-200">
                        <p className="text-center text-sm text-gray-500">
                            © {new Date().getFullYear()} Shopify Support. All rights reserved.
                        </p>
                    </div>
                </div>
            );
        };

        const App = () => {
            useEffect(() => {
                feather.replace();
                AOS.init({
                    duration: 800,
                    easing: 'ease-in-out',
                    once: true
                });
            }, []);

            return (
                <div className="max-w-md mx-auto">
                    <ShopifySupport />
                </div>
            );
        };

        ReactDOM.render(<App />, document.getElementById('root'));
    </script>
    <script>feather.replace();</script>
</body>
</html>